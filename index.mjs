// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-incr-minmax@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-incr-meanstdev@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-copy@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-read-only-property@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-read-only-accessor@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-max@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-sqrt@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-roundn@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-t-quantile@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import v from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-integer@esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@esm/index.mjs";var g=i,b=t,x=v.isPrimitive,w=c.isPrimitive,y=j.isPrimitive,T=u,E=f;var O=function(i,t){if(!b(t))return new TypeError(T("invalid argument. Options argument must be an object. Value: `%s`.",t));if(g(t,"alpha")){if(i.alpha=t.alpha,!x(i.alpha)||E(i.alpha))return new TypeError(T("invalid option. `%s` option must be a number. Option: `%s`.","alpha",i.alpha));if(i.alpha<0||i.alpha>1)return new RangeError(T("invalid option. `%s` option must be on the interval [0,1]. Option: `%f`.","alpha",i.alpha))}return g(t,"alternative")&&(i.alternative=t.alternative,!w(i.alternative))?new TypeError(T("invalid option. `%s` option must be a string. Option: `%s`.","alternative",i.alternative)):g(t,"init")&&(i.init=t.init,!y(i.init))?new TypeError(T("invalid option. `%s` option must be a nonnegative integer. Option: `%s`.","init",i.init)):null},P={init:100,alpha:.05,alternative:"two-sided",digits:4,decision:!0},V=i,q=t,R=e.isPrimitive,A=n.isPrimitive,D=s,F=r,G=a,M=o,k=l,z=m,B=d,C=p,H=h,I=u,J=O,K=P;var L=function(){var i,t,e,n,s,r,a,o,l,m,d;if(n=G(K),arguments.length&&(s=J(n,arguments[0])))throw s;return k(t={},"rejected",h),M(t,"alpha",n.alpha),k(t,"criticalValue",u),k(t,"statistic",v),k(t,"df",c),k(t,"mean",j),k(t,"sd",f),k(t,"min",g),k(t,"max",b),M(t,"alt",n.alternative),M(t,"method","Grubbs' Test"),M(t,"print",x),m=0,l=0,d=0,o=0,e=D(r=[0,0]),i=F(a=[0,0]),p;function p(s){var p,h,u;return 0===arguments.length?m<n.init||l<=0?null:t:(m+=1,i(s),e(s),l=m-2,m<n.init||l<=0?null:("min"===n.alternative?(d=(a[0]-r[0])/a[1],p=n.alpha/m):"max"===n.alternative?(d=(r[1]-a[0])/a[1],p=n.alpha/m):(h=z(a[0]-r[0],r[1]-a[0]),d=h/a[1],p=n.alpha/(2*m)),u=H(1-p,l),o=(m-1)*u/B(m*(l+u*u)),t))}function h(){return d>o}function u(){return o}function v(){return d}function c(){return l}function j(){return a[0]}function f(){return a[1]}function g(){return r[0]}function b(){return r[1]}function x(i){var e,s,m;if(s=n.digits,e=n.decision,arguments.length>0){if(!q(i))throw new TypeError(I("invalid argument. Must provide an object. Value: `%s`.",i));if(V(i,"digits")){if(!R(i.digits))throw new TypeError(I("invalid option. `%s` option must be a positive integer. Option: `%s`.","digits",i.digits));s=i.digits}if(V(i,"decision")){if(!A(i.decision))throw new TypeError(I("invalid option. `%s` option must be a boolean. Option: `%s`.","decision",i.decision));e=i.decision}}return m="",m+=t.method,m+="\n\n",m+="Alternative hypothesis: ","max"===n.alternative?m+="The maximum value ("+r[1]+") is an outlier":"min"===n.alternative?m+="The minimum value ("+r[0]+") is an outlier":(m+="The ",a[0]-r[0]>r[1]-a[0]?m+="minimum value ("+r[0]+")":m+="maximum value ("+r[1]+")",m+=" is an outlier"),m+="\n\n",m+="    criticalValue: "+C(o,-s)+"\n",m+="    statistic: "+C(d,-s)+"\n",m+="    df: "+l+"\n",m+="\n",e&&(m+="Test Decision: ",m+=d>o?"Reject null in favor of alternative at "+100*n.alpha+"% significance level":"Fail to reject null in favor of alternative at "+100*n.alpha+"% significance level",m+="\n"),m}},N=L;export{N as default};
//# sourceMappingURL=index.mjs.map
