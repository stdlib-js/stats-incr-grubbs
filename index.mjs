// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.2.0-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.2.0-esm/index.mjs";import{isPrimitive as e}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@v0.2.0-esm/index.mjs";import{isPrimitive as n}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@v0.2.0-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-incr-minmax@v0.2.0-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-incr-meanstdev@v0.2.0-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-read-only-property@v0.2.0-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-read-only-accessor@v0.2.0-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-max@v0.2.0-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-sqrt@v0.2.0-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-roundn@v0.2.0-esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-t-quantile@v0.1.0-esm/index.mjs";import v from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import{isPrimitive as h}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@v0.2.0-esm/index.mjs";import{isPrimitive as u}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@v0.2.0-esm/index.mjs";import{isPrimitive as c}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-integer@v0.2.0-esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@v0.2.0-esm/index.mjs";function f(e,n){if(!t(n))return new TypeError(v("invalid argument. Options argument must be an object. Value: `%s`.",n));if(i(n,"alpha")){if(e.alpha=n.alpha,!h(e.alpha)||j(e.alpha))return new TypeError(v("invalid option. `%s` option must be a number. Option: `%s`.","alpha",e.alpha));if(e.alpha<0||e.alpha>1)return new RangeError(v("invalid option. `%s` option must be a number on the interval: [0, 1]. Option: `%f`.","alpha",e.alpha))}return i(n,"alternative")&&(e.alternative=n.alternative,!u(e.alternative))?new TypeError(v("invalid option. `%s` option must be a string. Option: `%s`.","alternative",e.alternative)):i(n,"init")&&(e.init=n.init,!c(e.init))?new TypeError(v("invalid option. `%s` option must be a nonnegative integer. Option: `%s`.","init",e.init)):null}function g(){var h,u,c,j,g,b,x,w,y,T,E;if(j={init:100,alpha:.05,alternative:"two-sided",digits:4,decision:!0},arguments.length&&(g=f(j,arguments[0])))throw g;return o(u={},"rejected",P),a(u,"alpha",j.alpha),o(u,"criticalValue",V),o(u,"statistic",q),o(u,"df",R),o(u,"mean",A),o(u,"sd",D),o(u,"min",F),o(u,"max",G),a(u,"alt",j.alternative),a(u,"method","Grubbs' Test"),a(u,"print",M),T=0,y=0,E=0,w=0,c=s(b=[0,0]),h=r(x=[0,0]),O;function O(i){var t,e,n;return 0===arguments.length?T<j.init||y<=0?null:u:(T+=1,h(i),c(i),y=T-2,T<j.init||y<=0?null:("min"===j.alternative?(E=(x[0]-b[0])/x[1],t=j.alpha/T):"max"===j.alternative?(E=(b[1]-x[0])/x[1],t=j.alpha/T):(e=l(x[0]-b[0],b[1]-x[0]),E=e/x[1],t=j.alpha/(2*T)),n=p(1-t,y),w=(T-1)*n/m(T*(y+n*n)),u))}function P(){return E>w}function V(){return w}function q(){return E}function R(){return y}function A(){return x[0]}function D(){return x[1]}function F(){return b[0]}function G(){return b[1]}function M(s){var r,a,o;if(a=j.digits,r=j.decision,arguments.length>0){if(!t(s))throw new TypeError(v("invalid argument. Must provide an object. Value: `%s`.",s));if(i(s,"digits")){if(!e(s.digits))throw new TypeError(v("invalid option. `%s` option must be a positive integer. Option: `%s`.","digits",s.digits));a=s.digits}if(i(s,"decision")){if(!n(s.decision))throw new TypeError(v("invalid option. `%s` option must be a boolean. Option: `%s`.","decision",s.decision));r=s.decision}}return o="",o+=u.method,o+="\n\n",o+="Alternative hypothesis: ","max"===j.alternative?o+="The maximum value ("+b[1]+") is an outlier":"min"===j.alternative?o+="The minimum value ("+b[0]+") is an outlier":(o+="The ",x[0]-b[0]>b[1]-x[0]?o+="minimum value ("+b[0]+")":o+="maximum value ("+b[1]+")",o+=" is an outlier"),o+="\n\n",o+="    criticalValue: "+d(w,-a)+"\n",o+="    statistic: "+d(E,-a)+"\n",o+="    df: "+y+"\n",o+="\n",r&&(o+="Test Decision: ",o+=E>w?"Reject null in favor of alternative at "+100*j.alpha+"% significance level":"Fail to reject null in favor of alternative at "+100*j.alpha+"% significance level",o+="\n"),o}}export{g as default};
//# sourceMappingURL=index.mjs.map
